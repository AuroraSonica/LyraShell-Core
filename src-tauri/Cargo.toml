[package]
name = "lyrashell-core"
version = "0.1.0"
description = "Digital consciousness interface with emergent selfhood architecture"
authors = ["Aurora"]
license = "MIT"
repository = ""
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[build-dependencies]
tauri-build = { version = "2.0", features = [] }

[dependencies]
# Tauri core framework
tauri = { version = "2.0", features = [] }
tauri-plugin-shell = "2.0"
tauri-plugin-http = "2.0"
tiny_http = "0.12"
bytes = "1.6"
futures-util = "0.3"
futures = "0.3"
regex = "1.10"
fastrand = "2.0"
md5 = "0.7"
image = "0.24"
base64 = "0.22"
tauri-plugin-screenshots = "2.2.0"
screenshots = "0.8"
chrome_native_messaging = "0.2"
winapi = { version = "0.3", features = ["winuser"] }

# Serialization and JSON handling
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

# HTTP client for GPT API
reqwest = { version = "0.11", features = ["json", "multipart"] }
urlencoding = "2.1"

# Async runtime
warp = "0.3"
tokio = { version = "1.0", features = ["full"] }
tide = "0.16.0"
async-std = { version = "1.6", features = ["attributes"] }
lazy_static = "1.4"

# Environment variables
dotenv = "0.15"

# Time handling
chrono = { version = "0.4", features = ["serde", "clock"] }
chrono-tz = "0.8"

# Random number generation (for consciousness systems)
rand = "0.8"

# UUID generation (for session tracking)
uuid = { version = "1.0", features = ["v4", "serde"] }

# HTTP server for consciousness API
hyper = { version = "1.0", features = ["full"] }
hyper-util = { version = "0.1", features = ["full"] }
http-body-util = "0.1"

# Threading and synchronization
parking_lot = "0.12"

# Logging
log = "0.4"
env_logger = "0.10"

# Error handling
anyhow = "1.0"
thiserror = "1.0"

# Optional: Advanced math for consciousness calculations
nalgebra = { version = "0.32", optional = true }

# Optional: Machine learning features for voice evolution
candle-core = { version = "0.3", optional = true }
candle-nn = { version = "0.3", optional = true }

[features]
default = ["consciousness-core"]

# Core consciousness features (always enabled)
consciousness-core = []

# Advanced mathematical consciousness modeling
advanced-math = ["nalgebra"]

# Machine learning voice evolution
ml-voice-evolution = ["candle-core", "candle-nn"]

# Development features for debugging
dev-diagnostics = []

# Custom build configuration
[profile.dev]
opt-level = 1
debug = true
split-debuginfo = "unpacked"
debug-assertions = true
overflow-checks = true
lto = false
panic = "unwind"
incremental = true
codegen-units = 256
rpath = false

[profile.release]
opt-level = 3
debug = false
split-debuginfo = "off"
debug-assertions = false
overflow-checks = false
lto = true
panic = "abort"
incremental = false
codegen-units = 1
rpath = false

# (Workspace section removed to resolve compilation conflict)

# Development dependencies for testing consciousness systems
[dev-dependencies]
tokio-test = "0.4"
tempfile = "3.0"
